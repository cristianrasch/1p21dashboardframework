/*** LAYOUTING CONTAINERS AND SHIT ***/
	// mixins and shit


	// setup widths for all our bois
	@mixin internal-create-columns-classes($prepend-sel:'',$gap:0){

		@include internal-set-flex-basis($prepend-sel,$gap);

		@each $tag in $calculated-br-tags {
			@include br($tag) {
				@include internal-set-flex-basis(#{$prepend-sel}-#{$tag},$gap);
			}
		}
		
		// @at-root #{ internal-create-all-flex-col-selector($prepend-sel) } {
		// 	margin-left: #{$gap};
		// 	margin-top: #{$gap};
		// 	flex-grow: 0;
		// 	flex-shrink: 0;
		// }
	}

	@mixin internal-set-flex-basis($prepend-sel:'',$gap:0) {

		@for $i from 1 through $grid-units {

			@at-root #{$prepend-sel}-#{$i} {
				// flex-basis: ( 100% / $i );
				@if $gap {
					flex-basis: calc( #{ 100% * ($i/$grid-units ) } - #{$gap} );
				}@else {
					flex-basis: #{ 100% * ($i/$grid-units ) };
				}
				
			}
		}
	}


	// // get all them col frid classes and put them in one selector for syles fuck this shit
	// @function internal-create-all-flex-col-increment($prepend-sel:'') {

	// 	$all-flex-selectors: ();

	// 	@for $i from 1 through $grid-units {
	// 		$all-flex-selectors: append( #{$prepend-sel}-#{$i}, $all-flex-selectors,'comma');
	// 	}

	// 	@return $all-flex-selectors;

	// }

	// @function internal-create-all-flex-col-selector($prepend-sel:'') {

	// 	$all-flex-selectors: internal-create-all-flex-col-increment($prepend-sel);

	// 	@each $tag in $calculated-br-tags {
			
	// 		$all-flex-selectors: append(
	// 			internal-create-all-flex-col-increment( #{$prepend-sel}-#{$tag} ),
	// 			$all-flex-selectors
	// 		);
	// 	}

	// 	@return $all-flex-selectors;

	// }

	/* CONTAINER */
		$prefix: '.container';
		#{$prefix} {
			& {
				width:100%;
				padding-left: $container-gutter;
				padding-right: $container-gutter;
				margin: 0 auto;
				max-width: $container-max-width;
			}

			&#{$prefix}-fluid {
				max-width: none;
			}

			@include br($mobile-br-max-opposite) {
				&#{$prefix}-wide {
					padding-left: $container-gutter-wide;
					padding-right: $container-gutter-wide;
				}
				&#{$prefix}-slim {
					padding-left: $container-gutter-slim;
					padding-right: $container-gutter-slim;
				}
			}

			@include br(#{$mobile-br-max}-max) {
				padding-left: $container-gutter-mobile;
				padding-right: $container-gutter-mobile;
				max-width: $container-max-width-mobile;
			}
		}



		// grid layout specifix flex classes

		$prefix: '.flex';
		#{$prefix} {
			
			&-grid {
				margin-left: $grid-gap * -1;
				margin-bottom: $grid-gap;
				display:flex;
				flex-wrap:wrap;

				&-compact {
					margin-left: $grid-gap-compact * -1;
					margin-bottom: $grid-gap-compact;

					> [class*=flex-col-] {
						flex-basis: calc(100% - #{$grid-gap-compact});
					}

					> [class*=flex-col-],
					> #{$prefix}-child {
						margin-top: #{$grid-gap-compact};
						margin-left: #{$grid-gap-compact};
					}
				}

				&-expanded {
					margin-left: $grid-gap-expanded * -1;
					margin-bottom: $grid-gap-expanded;


					> [class*=flex-col-] {
						flex-basis: calc(100% - #{$grid-gap-expanded});
					}

					> [class*=flex-col-],
					> #{$prefix}-child {
						margin-top: #{$grid-gap-expanded};
						margin-left: #{$grid-gap-expanded};
					}
				}

				&-no-gutter {
					margin-bottom: 0;

					&,
					> [class*=flex-col-],
					> #{$prefix}-child {
						margin-top: 0;
						margin-left: 0;
					}


					> [class*=flex-col-],
					> #{$prefix}-child {
						margin-top: 0;
					}
				}
			}



			@at-root [class*=flex-col-] {
				flex-grow: 0;
				flex-shrink: 0;
				flex-basis: calc(100% - #{$grid-gap});

				#{$prefix}-no-gutter & {
					flex-basis: 100%;
				}
			}

			@at-root [class*=flex-col-],
			#{$prefix}-child {
				margin-top: #{$grid-gap};
				margin-left: #{$grid-gap};
			}

			&-col {

				@include internal-create-columns-classes(#{&},$grid-gap);

				#{$prefix}-grid-compact > & {

					@include internal-create-columns-classes(#{&},$grid-gap-compact);
				}
				#{$prefix}-grid-expanded > & {
					@include internal-create-columns-classes(#{&},$grid-gap-expanded);
				}

				#{$prefix}-no-gutter & {
					@include internal-create-columns-classes(#{&});
				}

			}
		}
