/*** SET ***/

/* SUBSET */
$prefix: '.table';
#{$prefix} {
    @at-root &,
    table {
        overflow-x:scroll;
        display:table;
        width:100%;
        border-collapse: collapse;
        border-spacing: 0;


        thead,
        tbody,
        tfoot,
        tr,
        #{$prefix}-row {
            min-width:100%;
        }

        thead,
        tbody,
        tfoot {
                display: table-header-group;
                vertical-align: middle;
        }
        

        @at-root & tr,
        #{$prefix}-row {
            height:100%;
            display:table-row;
            border-bottom: $table-cell-border-width solid $table-cell-border-color;

            .body-inverse & {
                border-bottom: $table-cell-border-width solid $table-cell-border-color-inverse;
            }
            
        }
        @at-root & th,td,
        #{$prefix}-cell,
        #{$prefix}-cell#{$prefix}-cell-heading {
            vertical-align: inherit;
            text-align: inherit;
            padding-left: $table-cell-gutter;
            padding-right: $table-cell-gutter;
            // vertical-align:middle;
            height:100%;
            display: table-cell;
            position:relative;
        }

        @at-root & th,
        #{$prefix}-cell#{$prefix}-cell-heading {
            padding-top: calc((#{$table-heading-min-height} - (#{$calculated-body-single-line})) * .5);
            padding-bottom: calc((#{$table-heading-min-height} - (#{$calculated-body-single-line})) * .5);
            background:$table-heading-background;

            @include type-set((
                color: $table-heading-color,
                weight:$table-heading-font-weight,
                style: $table-heading-font-style,
                case: $table-heading-text-transform,
            ));

            .body-inverse & {
                background:$table-heading-background-inverse;
                color: $table-heading-color-inverse
            }
        }

        @at-root & td,
        #{$prefix}-cell {
            padding-top: calc((#{$table-cell-min-height} - (1em * #{$calculated-body-line-height})) * .5);
            padding-bottom: calc((#{$table-cell-min-height} - (1em * #{$calculated-body-line-height})) * .5);

            &#{$prefix}-cell-no-gutter {
                padding:0;
            }
        }



        &#{$prefix}-large {
            td,
            #{$prefix}-cell {
                padding-top: calc((#{$table-cell-min-height-large} - (1em * #{$calculated-body-line-height})) * .5);
                padding-bottom: calc((#{$table-cell-min-height-large} - (1em * #{$calculated-body-line-height})) * .5);
            }
        }

        @at-root #{$prefix}-cell {
            &-align {
                &-left{
                    text-align:left;
                }
                &-center{
                    text-align:center;
                }
                &-right{
                    text-align:right;
                }
            }
        }


        @at-root #{$prefix}-label {
            width: $table-label-width;
            height: 100%;
            height:$table-cell-min-height - ($table-label-offset * 2);
            border-radius: $table-label-border-radius;
            display:inline-block;
            vertical-align:middle;
            
            @each $tag,$color in $calculated-brand-color-declarations {
                &-#{$tag} {
                    background-color: $color;
                }
            }
        }

        @at-root #{$prefix}-row {
            @each $tag,$color in $calculated-brand-color-declarations {
                &-#{$tag} {
                    background-color: rgba($color,$table-row-background-opacity);
                }

                &-disabled {
                    td,
                    #{$prefix}-cell {
                        opacity: $global-disabled-opacity;
                        cursor: no-drop;
                    }
                }
            }
        }


    }


}