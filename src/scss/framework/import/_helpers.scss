
/*** HELPERS ***/

	/* HIDEY CLASSES */
		.desktop-only {
			display: none !important;
		}

		.laptop-only {
			display: none !important;
		}

		.tablet-only {
			display: none !important;
		}

		.mobile-only {
			display: none !important;
		}

		@include breakpoint(lg) {
			.desktop-only {
				display: block !important;
			}
			
			.desktop-hide {
				display:none!important;
			}
		}

		@include breakpoint((md,md-max)) {
			.laptop-only {
				display: block !important;
			}
			
			.laptop-hide {
				display:none!important;
			}
		}

		@include breakpoint((sm,sm-max)) {

			.tablet-only {
				display: block !important;
			}
			
			.tablet-hide {
				display:none!important;
			}
		}

		@include breakpoint(xs-max) {
			.mobile-only {
				display: block !important;
			}
			
			.mobile-hide {
				display:none!important;
			}
		}

		.sr-only {
			display:none!important;
		}
	
		


	/* BACKGROUND CLASSES */
		$prefix: '.background';
		#{$prefix} {

			&-global {
				background-color: $global-background;

				.body-inverse & {
					background-color: $global-background-inverse;
				}
			}


			&-global-contrast {
				background-color: $global-background-contrast;

				.body-inverse & {
					background-color: $global-background-contrast-inverse;
				}

			}

			&-intensity {
				@for $i from 1 through length($calculated-color-brand-intensity) {
					&-#{$i} {
						background-color: nth($calculated-color-brand-intensity,$i);
					}
				}
			}

			&-gradient {

				& {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 0deg,
						use-shorthand:false
					))
				}

				&,
				&-45,
				&-90,
				&-135,
				&-180,
				&-225,
				&-270,
				&-315 {
					background-color: $gradient-start;
				}

				&-45 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 45deg,
						use-shorthand:false
					))
				}

				&-90 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 90deg,
						use-shorthand:false
					))
				}

				&-135 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 135deg,
						use-shorthand:false
					))
				}

				&-180 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 180deg,
						use-shorthand:false
					))
				}

				&-225 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 225deg,
						use-shorthand:false
					))
				}

				&-270 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 270deg,
						use-shorthand:false
					))
				}

				&-315 {
					@include gradient((
						color1: $gradient-start,
						color2: $gradient-end,
						angle: 315deg,
						use-shorthand:false
					))
				}
			}


			@each $tag,$color in $calculated-brand-color-declarations {
				&-#{$tag} {
					background-color: $color;
				}
			}
		}

	/* COLOR CLASSES */
		$prefix: '.color';
		#{$prefix} {
			&-global {
				color: $global-color;

				.body-inverse & {
					color: $global-color-inverse;
				}
			}

			&-intensity {
				@for $i from 1 through length($calculated-color-brand-intensity) {
					&-#{$i} {
						color: nth($calculated-color-brand-intensity,$i);
					}
				}
			}


			@each $tag,$color in $calculated-brand-color-declarations {
				&-#{$tag} {
					color: $color;
				}
			}
		}



	/* BACKGROUND CLASSES */
		.flex {

			&-xs {
				@extend %flex-xs;
			}
			
			&-sm {
				@extend %flex-sm;
			}
			
			&-md {
				@extend %flex-md;
			}
			
			&-lg {
				@extend %flex-lg;
			}
		}

	

	/* FIT IMAGE */	

		/* emulate background cover on image tags */
		.fit-image {
			position: relative;
			overflow:hidden;
			
			img {
				position:absolute;
				width: 100%;
				height: 100%;
				max-width:none;
				top:-50%;
				left:-50%;
				right:-50%;
				bottom:-50%;
				margin:auto;
				object-fit: cover;
				display: block;
			}
		}

	/* TEXT CLASSES */
	$prefix: '.text';
	#{$prefix}{

		&-align {
			&-center {
				text-align: center;
			}
			&-left {
				text-align: left;
			}
			&-right {
				text-align: right;
			}
			&-justify {
				text-align: justify;
			}
		}

		&-transform {
			&-uppercase {
				text-transform: uppercase;
			}
			&-lowercase {
				text-transform: lowercase;
			}
			&-capitalize {
				text-transform: capitalize;
			}
		}

		&-clip {

			//gradient text
			&-background {
				@supports not (-webkit-background-clip: text) {
					background: transparent;
					color: color(p);
				}

				@supports (-webkit-background-clip: text) {
					-webkit-background-clip: text;
					-webkit-text-fill-color: transparent;
				}
			}

			/* cut overflowing single line to ellipsis */
			&-line-break {
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
			}
		}

		&-weight {
			&-100 {
				font-weight: 100;
			}
			&-200 {
				font-weight: 200;
			}
			&-300 {
				font-weight: 300;
			}
			&-400 {
				font-weight: 400;
			}
			&-500 {
				font-weight: 500;
			}
			&-600 {
				font-weight: 600;
			}
			&-700 {
				font-weight: 700;
			}
			&-800 {
				font-weight: 800;
			}
			&-900 {
				font-weight: 900;
			}
		}


	}